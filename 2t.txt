1
int x ;
x=10;
cout << x ;
Done(); int x ; cout << y ;
x = 10 ;

Our-C running ...
> Definition of x entered ...
> Statement executed ...
> Statement executed ...
> Our-C exited ...<<


當測試「Test case 2 of 3」時，Input為>>2
     string
     sss;
    int  
   x  
 
   ;   
 x=  
   
    10;

    cout 
    <<   
x 

   ;   

    int  
   y  
 
   ;   
int z ;

x =y+z
- 2*x;
3

   -z;   

int w ;   

 w   
  ++;
   Done
  (    
    )    
    ;   int y = 5 ;
cout << y ;  
<<

正確的輸出應該是>>Our-C running ...
> Definition of sss entered ...
> Definition of x entered ...
> Statement executed ...
> Statement executed ...
> Definition of y entered ...
> Definition of z entered ...
> Statement executed ...
> Statement executed ...
> Definition of w entered ...
> Statement executed ...
> Our-C exited ...<<

1
int x ;
x=10;
{ int x ;
  x = 10 ;
}
cout << x ;
string str ;
str = "This is a fine day.\n" ;
float y ;
{ float yy ;
  yy=y+yy;
  yy=y
  ; 
}
y = 20 ;
Done(); int x ; cout << y ;
x = 10 ;
<<

正確的輸出應該是>>Our-C running ...
> Definition of x entered ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Definition of str entered ...
> Statement executed ...
> Definition of y entered ...
> Statement executed ...
> Statement executed ...
> Our-C exited ...<<

當測試「Test case 2 of 3」時，Input為>>2
String str ;
string str;//comment should be skipped
char chArray[30] ;
cin >> chArray1 ;  // undeclared identifier
cin >> chArray ;
str = "This is a fine day.\n" 
      + chArray 
      + "\n" 
      ;
str = str + "Isn't it?\n" ;
cout << str ;
str = "This is a fine day.\n" 
      + "\n"
      + chArray1   // undeclared identifier within a statement
                   // once an input error occurs, parsing
                   // restarts from the next line
      ;      // a null statement is nevertheless "executable"
float hello ;
int x ;
hello = 20
        *           // comment should be skipped
        ( ( x - hello ) / 34.5 
          - 17   // to the right is comment : + ( hello - x
          - ( hello - x ) 
        ) 
        ;
x=(x+8)/hello/(hello-8.0);
cout << "Value of 'hello' is now : " 
     << hello 
     << "\n" 
     ;
hello = 20
        * 
        ( ( x - hello135 ) / 34.5  // undeclared identifier
          - 17   // input restarts from this line
          - ( hello - x ) 
        )        // but then, this ')' is unexpected
        ;        // a null statement is fine though
Done();Done(how);Done(are);Done();
Done(you);
Done();
<<

正確的輸出應該是>>Our-C running ...
> Line 1 : undefined identifier : 'String'
> Definition of str entered ...
> Definition of chArray entered ...
> Line 1 : undefined identifier : 'chArray1'
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Line 3 : undefined identifier : 'chArray1'
> Statement executed ...
> Definition of hello entered ...
> Definition of x entered ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Line 3 : undefined identifier : 'hello135'
> Line 3 : unexpected token : ')'
> Statement executed ...
> Our-C exited ...<<

2
Taipei, Taiwan ;         // undeclared identifier
string str, str1 ;       // comment should be skipped
string str3
      , 
      str4 ;       // comment should be skipped
char chArray[30] ;
cin >> chArray1 ;  // undeclared identifier
cin >> chArray ;
ListAllVariables();
ListVariable( "chArray" ) ;
str = "This is a fine day.\n" 
      + chArray 
      + "\n" 
      ;
str = str + "Isn't it?\n" ;
cout << str ;
str = "This is a fine day.\n" 
      + "\n"
      + chArray1   // undeclared identifier within a statement
                   // once an input error occurs, parsing
                   // restarts from the next line
      ;      // a null statement is nevertheless "executable"
float hello;
int x;
hello = 20 / hello
        +           // comment should be skipped
        ( ( x - hello ) / 34.5 
          - 17   // to the right is comment : + ( hello - x
          - ( hello - x ) 
        ) 
        ;
x=(x+8)/hello/(hello-8.0);
cout << "Value of 'hello' is now : " 
     << hello 
     << "\n" 
     ;
hello = 20
        * 
        ( ( x - hello135 ) / 34.5  // undeclared identifier
          - 17   // input restarts from this line
          - ( hello - x ) 
        )        // but then, this ')' is unexpected
        ;        // a null statement is fine though
ListAllVariables();
ListVariable( "hello" ) ;
Done();
<<

正確的輸出應該是>>Our-C running ...
> Line 1 : undefined identifier : 'Taipei'
> Definition of str entered ...
Definition of str1 entered ...
> Definition of str3 entered ...
Definition of str4 entered ...
> Definition of chArray entered ...
> Line 1 : undefined identifier : 'chArray1'
> Statement executed ...
> chArray
str
str1
str3
str4
Statement executed ...
> char chArray[ 30 ] ;
Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Line 3 : undefined identifier : 'chArray1'
> Statement executed ...
> Definition of hello entered ...
> Definition of x entered ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Line 3 : undefined identifier : 'hello135'
> Line 3 : unexpected token : ')'
> Statement executed ...
> chArray
hello
str
str1
str3
str4
x
Statement executed ...
> float hello ;
Statement executed ...
> Our-C exited ...<<


3
int first,second,
max;
cin
    >>first>>second;cin>>first;
if ( ( first>(second-5)*
                        max ) && ( second > 0 ) )
  if ( second > -35 )
    max=35
         -second;
  else 
    max = second - 35 ;
else { // NOT ( ( first > second ) && ( second > 0 ) )
  second++ ;
  max = second ;
} // else

if ( ( first > second ) && ( second > 0 ) )
  if ( second > -35 )
    max = 35 - second ;
  else 
    max = second - 35 }
else { // NOT ( ( first > second ) && ( second > 0 ) )
  second++ ;
  max = second ;
} // else

while ( ( max >= ( first - second ) 
        )
        ||
        ( max > 100 ) 
      ) {
  if ( first > 5 )
    first = first + ;
  while ( second + 5 > first )
    first++ ;
} // while ( max >= 0 )

while ( ( max >= ( first - second ) 
        )
        ||
        ( max > 100 ) 
      ) {
  if ( first > second )
    first = first + second ;
  while ( second + 5 > first )
    first++ ;
} // while ( max >= 0 )
max = first > second ? first : second ;
cout << "Value of first is : " << first << "\n" ;
cout << "Value of max is : " << max << "\n" ;
Done() ;
<<

正確的輸出應該是>>Our-C running ...
> Definition of first entered ...
Definition of second entered ...
Definition of max entered ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Line 6 : unexpected token : '}'
> Line 1 : unexpected token : 'else'
> Statement executed ...
> Statement executed ...
> Line 1 : unexpected token : '}'
> Line 8 : unexpected token : ';'
> Statement executed ...
> Line 1 : unexpected token : '}'
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Our-C exited ...<<

3
int test ;
char test ;  // re-define 'test'

int salary[30] ;

void InputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cin >> revenue[ i ]
    i++ ; 
    i=i+1;
  } // while ( i < 30 )
} // InputSalary()

void InputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cin >> revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )
} // InputSalary()

void Sort(int intArray[30]) {
  int i;
  i=0;
  while(i<29){
    int j;
    j=i;
    while(j<30){
      if(intArray[j]<intArray[i]){
      int temp;
      temp=intArray[i];
      intArray[i]=intArray[j];
      intArray[j] =temp;
      } // if intArray[ j ] < intArray[ i ]
      j++ ;
    } // while j < 30
    i++ ;
  } // while i < 29
} // Sort()

void InputSalary( int revenue[ 30 ] ) { // semantic error
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cout << revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )
} // InputSalary()

void InputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cin >> revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )
} // InputSalary()

void OutputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cout << revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )
} // OutputSalary()

ListAllFunctions() ;

ListFunction( "Sort" ) ;

InputSalary( salary ) ;

Sort( salary ) ;

OutputSalary( salary ) ;

Done() ;
<<

正確的輸出應該是>>Our-C running ...
> Definition of test entered ...
> New definition of test entered ...
> Definition of salary entered ...
> Line 7 : unexpected token : 'i'
> Line 1 : undefined identifier : 'i'
> Line 1 : unexpected token : '}'
> Line 1 : unexpected token : '}'
> Definition of InputSalary() entered ...
> Definition of Sort() entered ...
> New definition of InputSalary() entered ...
> New definition of InputSalary() entered ...
> Definition of OutputSalary() entered ...
> InputSalary()
OutputSalary()
Sort()
Statement executed ...
> void Sort( int intArray[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 29 ) {
    int j ;
    j = i ;
    while ( j < 30 ) {
      if ( intArray[ j ] < intArray[ i ] ) {
        int temp ;
        temp = intArray[ i ] ;
        intArray[ i ] = intArray[ j ] ;
        intArray[ j ] = temp ;
      }
      j++ ;
    }
    i++ ;
  }
}
Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Our-C exited ...<<

當測試「Test case 2 of 4」時，Input為>>2
int first, second, max ;
cin >> first >> second ;
if ( ( first > second ) && ( second > 0 ) )
  if ( second > -35 )
    while ( max < 35 )
      max = max + 5 ;
  else 
    max = second - 35 ;
else { // NOT ( ( first > second ) && ( second > 0 ) )
  second++ ;
  max = second ;
} // else

if ( ( first > second ) && ( second > 0 ) )
  if ( second > -35 )
    max = 35 - second ;
  else 
    max = second - 35 }
else { // NOT ( ( first > second ) && ( second > 0 ) )
  second++ ;
  max = second ;
} // else

while ( ( max >= ( first - second ) 
        )
        ||
        ( max > 100 ) 
      ) {
  if ( first > 5 )
    first = first + ;
  while ( second + 5 > first )
    first++ ;
} // while ( max >= 0 )

while ( ( max >= ( first - second ) 
        )
        ||
        ( max > 100 ) 
      ) {
  if ( first > second )
    first = first + second ;
  while ( second + 5 > first )
    first++ ;
} // while ( max >= 0 )
max = first > second ? first : second ;
cout << "Value of first is : " << first << "\n" ;
cout << "Value of max is : " << max << "\n" ;
Done() ;
<<

正確的輸出應該是>>Our-C running ...
> Definition of first entered ...
Definition of second entered ...
Definition of max entered ...
> Statement executed ...
> Statement executed ...
> Line 6 : unexpected token : '}'
> Line 1 : unexpected token : 'else'
> Statement executed ...
> Statement executed ...
> Line 1 : unexpected token : '}'
> Line 8 : unexpected token : ';'
> Statement executed ...
> Line 1 : unexpected token : '}'
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Our-C exited ...<<

3
int test ;
char test ;  // re-define 'test'
int test1 ; int test2 ;
int salary[30] ; ListAllVariables();
void InputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  float salary[30] ;
  while ( i < 30 ) {
    cin >> revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )


} // InputSalary()
ListVariable( "salary" );
Done() ;



3
int test ;
char test ;  // re-define 'test'

int salary[30] ;
void InputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cin >> revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )

   ListAllVariables();
   ListVariable( "j" ) ;
ListAllFunctions() ;

ListFunction( "InputSalary" ) ;
} // InputSalary()

   ListAllVariables();
   ListVariable( "i" ) ;
ListAllFunctions() ;

ListFunction( "InputSalary" ) ;

Done() ;
當測試「Test case 3 of 4」時，Input為>>3
int test ;
char test ;  // re-define 'test'

int salary[30] ;

void InputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cin >> revenue[ i ]
    i++ ;
  } // while ( i < 30 )
} // InputSalary()

void InputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cin >> revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )
} // InputSalary()

void Sort(int intArray[30]) {
  int i;
  i=0;
  while(i<29){
    int j;
    j=i;
    while(j<30){
      if(intArray[j]<intArray[i]){
      int temp;
      temp=intArray[i];
      intArray[i]=intArray[j];
      intArray[j] =temp;
      } // if intArray[ j ] < intArray[ i ]
      j++ ;
    } // while j < 30
    i++ ;
  } // while i < 29
} // Sort()

void InputSalary( int revenue[ 30 ] ) { // semantic error
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cout << revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )
} // InputSalary()

void InputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cin >> revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )
} // InputSalary()

void OutputSalary( int revenue[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 30 ) {
    cout << revenue[ i ] ;
    i++ ;
  } // while ( i < 30 )
} // OutputSalary()

ListAllFunctions() ;

ListFunction( "Sort" ) ;
OutputSalary( "salary" );
InputSalary( "salary" );
Sort( "salary" );

Done() ;
<<

正確的輸出應該是>>Our-C running ...
> Definition of test entered ...
> New definition of test entered ...
> Definition of salary entered ...
> Line 7 : unexpected token : 'i'
> Line 1 : unexpected token : '}'
> Line 1 : unexpected token : '}'
> Definition of InputSalary() entered ...
> Definition of Sort() entered ...
> New definition of InputSalary() entered ...
> New definition of InputSalary() entered ...
> Definition of OutputSalary() entered ...
> InputSalary()
OutputSalary()
Sort()
Statement executed ...
> void Sort( int intArray[ 30 ] ) {
  int i ;
  i = 0 ;
  while ( i < 29 ) {
    int j ;
    j = i ;
    while ( j < 30 ) {
      if ( intArray[ j ] < intArray[ i ] ) {
        int temp ;
        temp = intArray[ i ] ;
        intArray[ i ] = intArray[ j ] ;
        intArray[ j ] = temp ;
      }
      j++ ;
    }
    i++ ;
  }
}
Statement executed ...
> Statement executed ...
> Statement executed ...
> Statement executed ...
> Our-C exited ...<<





1
int first ;
int second, max ;
cin >> First ;
cin >> first 
    >> second ;
if ( ( first > second ) && ( second > 0 ) )
  max = first ;
else
  max = second ;
if ( ( first > second ) && ( second > 0 ) ) )
  max = first ;
else
  max = second ;
while ( ( max >= ( first - second ) 
        )
        ||
        ( max > 100 ) 
      ) {
  first = first + sacond ;
  max-- ;
} // while ( max >= 0 )

while ( ( max >= ( first - second ) 
        )
        ||
        ( max > 100 ) 
      ) {
  first = first + second ;
  max-- ;
} // while ( max >= 0 )
cout << "Value of first is : " << first << "\n" ;
cout << "Value of max is : " << max << "\n" ;
  ( first = max ) ;
  ( ( first + max1
    ) 
  ) ;
Done() ;